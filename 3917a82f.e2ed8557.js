(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{148:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(2),a=n(9),o=(n(0),n(169)),i={id:"tctemplate",title:"Test Case Template",sidebar_label:"TC Template"},s={id:"tctemplate",title:"Test Case Template",description:"This manual describes how to fill in the Test Case .yaml, what fields it should contain and how they are used in ITP.",source:"@site/docs/tctemplate.md",permalink:"/interop-docs/tctemplate",editUrl:"https://github.com/gsmainclusivetechlab/interop-docs/docs/tctemplate.md",sidebar_label:"TC Template",sidebar:"someSidebar",previous:{title:"Guide for ITP Test Cases",permalink:"/interop-docs/testcases"},next:{title:"Style Guide / Teste",permalink:"/interop-docs/doc1"}},c=[{value:"Test Case data",id:"test-case-data",children:[]},{value:"Test Step data",id:"test-step-data",children:[{value:"Global values",id:"global-values",children:[]}]},{value:"Assertions",id:"assertions",children:[]},{value:"Overridings",id:"overridings",children:[]}],l={rightToc:c};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"This manual describes how to fill in the Test Case .yaml, what fields it should contain and how they are used in ITP."),Object(o.b)("h2",{id:"test-case-data"},"Test Case data"),Object(o.b)("p",null,"This is the first layer of the data that contains the info about the Test Case itself.\nThey are:"),Object(o.b)("p",null,"TABELA"),Object(o.b)("p",null,"The whole Test Case info may look like:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),'name: Authorized Transaction by Payer FSP\nuse_case: Merchant-Initiated Merchant Payment\nbehavior: positive\ndescription: |\n  The Service Provider wants to test if he is capable of receiving a transaction from a different wallet provider that he has an account. In this case, we simulate the scenario when the Payer would like to buy goods or services from a Service Provider (the Payee), but each of them uses different wallet providers. This flow shows the necessary steps for this transaction simulating an approved transaction.\nprecondition: |\n  - Service Provider has GSMA Mobile Money API Implemented.\n  - Service Provider is capable of handled async calls.\n  - Payee and Payer MMOs exist in Mojaloop as Participants.\n  - Payee and Payer exist in Mojaloop as Parties.\n  - Amount should be the value "1001".\n  - Debit party should be identified by account identifier "msisdn" with the value "+33555123456".\n  - Credit party should be identified by account identifier "msisdn" with the value "+33555789123".\ncomponents:\n  - Service Provider\n  - Mobile Money Operator 1\n  - Mobile Money Operator 2\ntest_steps:\n')),Object(o.b)("h2",{id:"test-step-data"},"Test Step data"),Object(o.b)("p",null,"The second lawyer of the yaml file is the description of all Test Steps one-by-one.\nTest Steps contains very much information so it will be divided into smaller sections."),Object(o.b)("h3",{id:"global-values"},"Global values"),Object(o.b)("p",null,"Tabela"),Object(o.b)("p",null,"Example of global values:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"  - path: /quotes/{ID}\n    pattern: '^quotes/[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$'\n    method: PUT\n    source: Mojaloop\n    target: Mobile Money Operator 1\n    api_spec: Mojaloop v1.0\n    trigger:\n      transferAmount:\n        amount: '99'\n")),Object(o.b)("h2",{id:"assertions"},"Assertions"),Object(o.b)("p",null,"Assertions can be performed for any value in the header or body of the Request or Response. Status may also be set for Response."),Object(o.b)("p",null,"TABELA"),Object(o.b)("p",null,"Example of assertions:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"test_request_scripts:\n      - name: Amounts and currencies are specified correctly\n        rules:\n          body.transferAmount.amount: 'required|in:99'\n          body.transferAmount.currency: 'required|regex:/^[A-Z]{3}/'\n          body.payeeReceiveAmount.amount: 'required|in:100'\n          body.payeeReceiveAmount.currency: 'required|regex:/^[A-Z]{3}/'\n          body.payeeFspCommission.amount: 'required|in:1'\n          body.payeeFspCommission.currency: 'required|regex:/^[A-Z]{3}/'\n\n    test_response_scripts:\n      - name: Transaction was successfully accepted\n        rules:\n          status: 'required|in:200'\n")),Object(o.b)("h2",{id:"overridings"},"Overridings"),Object(o.b)("p",null,"tbc"))}u.isMDXComponent=!0},169:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s({},t,{},e)),n},p=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(n),b=r,m=p["".concat(i,".").concat(b)]||p[b]||d[b]||o;return n?a.a.createElement(m,s({ref:t},l,{components:n})):a.a.createElement(m,s({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);
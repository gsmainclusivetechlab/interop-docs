(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{154:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return a})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var s=n(2),r=n(9),o=(n(0),n(163)),i={title:"Test Sessions",sidebar_label:"Test Sessions"},a={id:"manual/session",title:"Test Sessions",description:"The execution of tests in the Interoperability Test Platform (ITP) is performed",source:"@site/docs/manual/session.md",permalink:"/manual/session",editUrl:"https://github.com/gsmainclusivetechlab/interop-docs/blob/develop/docs/manual/session.md",sidebar_label:"Test Sessions",sidebar:"someSidebar",previous:{title:"Quick Guide for Tests",permalink:"/manual/quickguide"},next:{title:"Testing without a SUT",permalink:"/manual/postman-sut"}},c=[{value:"Creating a Test Session",id:"creating-a-test-session",children:[{value:"Step 1: SUT Selection",id:"step-1-sut-selection",children:[]},{value:"Step 2: Session Setup",id:"step-2-session-setup",children:[]},{value:"Step 3: Configure SUT",id:"step-3-configure-sut",children:[]}]},{value:"Running Tests",id:"running-tests",children:[]}],l={rightToc:c};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(s.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The execution of tests in the Interoperability Test Platform (ITP) is performed\nthrough the creation of sessions. Sessions are a selection of use cases and test\ncases with a validation purpose and possibly a common scope. During the creation\nof a session, the user sets the address of the SUT, defines information related\nto the session and selects the test cases to be included. After creation, it is\npossible to run tests by changing parameters for each test case. The created\nsession is available on the home screen of the ITP (as shown in the picture\nbelow), allowing the user to consult previously run tests, delete and run new\ntests."),Object(o.b)("p",null,"Home screen with the user sessions: ",Object(o.b)("img",Object(s.a)({parentName:"p"},{src:"/img/itphome.png",alt:"ITP Home"}))),Object(o.b)("h2",{id:"creating-a-test-session"},"Creating a Test Session"),Object(o.b)("p",null,"To create a session you must perform three main steps: SUT Selection, Session\nSetup and SUT Configuration."),Object(o.b)("h3",{id:"step-1-sut-selection"},"Step 1: SUT Selection"),Object(o.b)("p",null,"In this step, you must enter basic information about the system under test (SUT)\nby the platform: the type of the ",Object(o.b)("strong",{parentName:"p"},"SUT")," and its ",Object(o.b)("strong",{parentName:"p"},"URL"),"."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"SUT:")," The currently supported SUT types are ",Object(o.b)("inlineCode",{parentName:"p"},"Service Provider"),",\n",Object(o.b)("inlineCode",{parentName:"p"},"Mobile Money Operator 1")," and ",Object(o.b)("inlineCode",{parentName:"p"},"Mobile Money Operator 2"),"."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"URL:")," To test your system, it must be accessible from the test platform.\nEnter the URL of your SUT, which the test platform will use to send requests as\npart of test execution."),Object(o.b)("p",null,"If you do not currently have a SUT, but still wish to explore the\ninteroperability test platform, you can simulate a Service Provider SUT using\nthe instructions ",Object(o.b)("a",Object(s.a)({parentName:"p"},{href:"postman-sut"}),"here"),"."),Object(o.b)("p",null,"Step 01 - Selecting the system under test:\n",Object(o.b)("img",Object(s.a)({parentName:"p"},{src:"/img/itpselectsut.png",alt:"ITP Session SUT Selection"}))),Object(o.b)("h3",{id:"step-2-session-setup"},"Step 2: Session Setup"),Object(o.b)("p",null,"In this step, you can add information about the session you are creating:"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Name:")," Alias used to name the session. This name will be visible in the\ndashboard."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Description:")," Information about the session, to help explain the purpose of\nthe session."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Use Cases:")," All use case and test cases which are relevant for the\ncurrently-selected SUT type are displayed here. You can select any set of test\ncases to run during this session."),Object(o.b)("p",null,"Step 2 - Session Setup form: ",Object(o.b)("img",Object(s.a)({parentName:"p"},{src:"/img/itpsessioninfo.png",alt:"ITP Session Info"}))),Object(o.b)("h3",{id:"step-3-configure-sut"},"Step 3: Configure SUT"),Object(o.b)("p",null,"During the execution of the tests, your SUT will need to communicate with other\ncomponents (such as FSP simulators). In step 3 of the session creation wizard,\nyou will be presented with the URLs that your SUT should use for this\ncommunication. These URLs can also be retrieved after the session has been\ncreated from the session results page."),Object(o.b)("p",null,"Step 3 - Component URLs:\n",Object(o.b)("img",Object(s.a)({parentName:"p"},{src:"/img/itpsessionconfigure.png",alt:"ITP Session Configure Components"}))),Object(o.b)("p",null,"After the session has been created, you will be able to see the test cases\nselected during creation. From there, it is possible to select a specific test\ncase and proceed with the test execution."),Object(o.b)("p",null,"Example of session main screen after its creation:\n",Object(o.b)("img",Object(s.a)({parentName:"p"},{src:"/img/itpsessionscreen.png",alt:"Session Screen"}))),Object(o.b)("h2",{id:"running-tests"},"Running Tests"),Object(o.b)("p",null,'Once your test session has been created, there are two ways to trigger test\nexecution, depending on the flow under test. For flows which begin with a\nrequest from the SUT, simply trigger this request on your SUT. For flows which\nbegin with a request from another component, a button will be visible on the\ntest case results page labelled "Run Test Case". Clicking the button will send\nthis initial request, and the remainder of the test flow will proceed according\nto the test case definition.'),Object(o.b)("p",null,Object(o.b)("img",Object(s.a)({parentName:"p"},{src:"/img/run-test-case.png",alt:"Run Test Case"}))))}p.isMDXComponent=!0},163:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return h}));var s=n(0),r=n.n(s);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,s,r=function(e,t){if(null==e)return{};var n,s,r={},o=Object.keys(e);for(s=0;s<o.length;s++)n=o[s],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(s=0;s<o.length;s++)n=o[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a({},t,{},e)),n},u=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=Object(s.forwardRef)((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(n),m=s,h=u["".concat(i,".").concat(m)]||u[m]||b[m]||o;return n?r.a.createElement(h,a({ref:t},l,{components:n})):r.a.createElement(h,a({ref:t},l))}));function h(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,i=new Array(o);i[0]=m;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:s,i[1]=a;for(var l=2;l<o;l++)i[l]=n[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);
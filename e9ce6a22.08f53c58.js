(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{171:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return u}));var a=n(2),o=n(9),i=(n(0),n(180)),l=n(201),r={id:"mmo",title:"Mobile Money Operator Installation Guide",sidebar_label:"Mobile Money Operator"},s={id:"installation/mmo",title:"Mobile Money Operator Installation Guide",description:"The GSMA Interoperability Test Platform currently supports simulation of mobile",source:"@site/docs/installation/mmo.mdx",permalink:"/installation/mmo",editUrl:"https://github.com/gsmainclusivetechlab/interop-docs/blob/develop/docs/installation/mmo.mdx",sidebar_label:"Mobile Money Operator",sidebar:"someSidebar",previous:{title:"Interoperability Test Platform Installation Guide",permalink:"/installation/itp"},next:{title:"Service Provider Installation Guide",permalink:"/installation/sp"}},c=[{value:"MMO1 Simulator Set-up",id:"mmo1-simulator-set-up",children:[{value:"Database Installation",id:"database-installation",children:[]},{value:"URL Configuration",id:"url-configuration",children:[]}]},{value:"MMO2 Simulator Set-up",id:"mmo2-simulator-set-up",children:[{value:"URL Configuration",id:"url-configuration-1",children:[]},{value:"Launch",id:"launch",children:[]}]},{value:"Updating Simulators",id:"updating-simulators",children:[{value:"Backing Up",id:"backing-up",children:[]},{value:"Fetching Updates",id:"fetching-updates",children:[]}]},{value:"Production Use",id:"production-use",children:[]}],b={rightToc:c};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"The GSMA Interoperability Test Platform currently supports simulation of mobile\nmoney operators (MMO) in two configurations. In the first configuration, the MMO\ncan communicate with a service provider via the\n",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://developer.mobilemoneyapi.io/"}),"GSMA Mobile Money API")," and with an\ninteroperability hub using the Mojaloop API (MMO1 in the diagram below). In the\nsecond configuration, the MMO will communicate exclusively with the Mojaloop API\n(MMO2 in the diagram below)."),Object(i.b)(l.a,{options:{width:"100%",height:"auto"},dot:'\n    digraph { \n      graph [nodesep="1", ranksep="0.6", fillcolor="black"];\n      node [ fontname="var(--ifm-font-family)", shape="box", margin=0.3];\n      edge [ fontname="var(--ifm-font-family)"];\n      rankdir="LR"\n      ratio="fill";\n      sp [label="Service Provider"]\n      mmo1 [label="MMO1"]\n      mojaloop [label="Interoperability\nHub (Mojaloop)"]\n      mmo2 [label="MMO2"]\n      sp -> mmo1 [dir="both", color="#DE002B", label="MM API", fontcolor="#DE002B"]\n      mmo1 -> mojaloop -> mmo2 [dir="both", label="Mojaloop API", fontcolor="#00A3FF", color="#00A3FF"]\n    }\n',mdxType:"Graphviz"}),Object(i.b)("h2",{id:"mmo1-simulator-set-up"},"MMO1 Simulator Set-up"),Object(i.b)("p",null,"To begin with, download the code for the simulator onto your machine. To do this\nusing git, run:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ git clone git@github.com:gsmainclusivetechlab/interop-mm-simulator.git\n$ cd interop-mm-simulator\n")),Object(i.b)("p",null,"Certain configuration files must be created to customise the simulator to your\nown environment. To get you started, you can copy the ",Object(i.b)("inlineCode",{parentName:"p"},"*.example")," files included\nin the codebase. Alternatively, you can run the ",Object(i.b)("inlineCode",{parentName:"p"},"make init")," command if you have\n",Object(i.b)("inlineCode",{parentName:"p"},"make")," installed on your machine. The files to copy are:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},".env"),": In this file, you can configure the ports that the simulator should\nlisten for connections on, as well as defining credentials for the MySQL\ndatabase."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"src/.env"),": In this file, you can configure the URL for the test platform, as\nwell as the URLs that the platform will use to contact other simulator\ncomponents."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"docker-compose.yml"),": No changes should be required for development.")),Object(i.b)("p",null,"Once the configuration files have been added, you should be able to launch all\nservices using the following command:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'$ docker-compose up -d\n# Creating network "mm-simulator_default" with the default driver\n# Creating mm-simulator_mysqldb_1 ... done\n# Creating mm-simulator_app_1     ... done\n# Creating mm-simulator_web_1     ... done\n')),Object(i.b)("h3",{id:"database-installation"},"Database Installation"),Object(i.b)("p",null,"At this point, ",Object(i.b)("inlineCode",{parentName:"p"},"docker-compose")," has launched all services required for the\nsimulator, but they still require further set-up. In a future version of the\nMMO1 simulator , the images used by Docker will be pre-configured, so this step\nwill not be necessary. In the meantime, you can set up the database and install\nany missing dependencies by simply running ",Object(i.b)("inlineCode",{parentName:"p"},"make install"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ make install\n# docker-compose exec app bash -c \"make install\"\n# Chmod storage and bootstrap cache...\n# Install composer...\n# ...\n# make[1]: Leaving directory '~/Code/GSMA/interop-mm-simulator'\n# touch runtime/installed\n")),Object(i.b)("p",null,"The simulator should now be accessible at ",Object(i.b)("inlineCode",{parentName:"p"},"http://localhost:8084"),"."),Object(i.b)("h3",{id:"url-configuration"},"URL Configuration"),Object(i.b)("p",null,"In order for the simulator to communicate with other components, you must add\nthe URLs for these components into the ",Object(i.b)("inlineCode",{parentName:"p"},"src/.env")," file. In particular, you will\nneed to add URLs pointing to the service provider and the Mojaloop hub. In our\nparticular case, we must use URLs for the core test platform, which will\nredirect requests to the appropriate component. All simulators must be\nconfigured with URLs that follow a consistent structure:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"https://{itp_url}/testing/{my_uuid}/{recipient_uuid}/simulator/\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Within MMO1, ",Object(i.b)("inlineCode",{parentName:"li"},"my_uuid")," should always be equal to\n",Object(i.b)("inlineCode",{parentName:"li"},"e5f5e817-94d6-4a43-a7ec-f7274b6d85c2")),Object(i.b)("li",{parentName:"ul"},"For the service provider, set\n",Object(i.b)("inlineCode",{parentName:"li"},"recipient_uuid=114511be-74e9-49d5-b93e-b4a461e01626"),"."),Object(i.b)("li",{parentName:"ul"},"For the Mojaloop hub, set\n",Object(i.b)("inlineCode",{parentName:"li"},"recipient_uuid=b2a85076-b748-4d93-8df1-2b39844e6d4b"),".")),Object(i.b)("p",null,"The Mojaloop hub URL must be updated in several places within ",Object(i.b)("inlineCode",{parentName:"p"},"src/.env"),". In the\nend, the file should look something like this:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ini"}),"# Service Provider URL\nHOST_SERVICE_PROVIDER=https://{itp_url}/e5f5e817-94d6-4a43-a7ec-f7274b6d85c2/114511be-74e9-49d5-b93e-b4a461e01626/simulator/\n\n# Mojaloop URLs - all identical\nHOST_ACCOUNT_LOOKUP_ADMIN=https://{itp_url}/testing/114511be-74e9-49d5-b93e-b4a461e01626/e5f5e817-94d6-4a43-a7ec-f7274b6d85c2/simulator/\nHOST_ACCOUNT_LOOKUP_SERVICE=https://{itp_url}/testing/114511be-74e9-49d5-b93e-b4a461e01626/e5f5e817-94d6-4a43-a7ec-f7274b6d85c2/simulator/\nHOST_CENTRAL_LEDGER=https://{itp_url}/testing/114511be-74e9-49d5-b93e-b4a461e01626/e5f5e817-94d6-4a43-a7ec-f7274b6d85c2/simulator/\nHOST_CENTRAL_SETTLEMENT=https://{itp_url}/testing/114511be-74e9-49d5-b93e-b4a461e01626/e5f5e817-94d6-4a43-a7ec-f7274b6d85c2/simulator/\nHOST_SIMULATOR=https://{itp_url}/testing/114511be-74e9-49d5-b93e-b4a461e01626/e5f5e817-94d6-4a43-a7ec-f7274b6d85c2/simulator/\nHOST_TRANSACTION_REQUESTS_SERVICE=https://{itp_url}/testing/114511be-74e9-49d5-b93e-b4a461e01626/e5f5e817-94d6-4a43-a7ec-f7274b6d85c2/simulator/\nHOST_ML_API_ADAPTER=https://{itp_url}/testing/114511be-74e9-49d5-b93e-b4a461e01626/e5f5e817-94d6-4a43-a7ec-f7274b6d85c2/simulator/\nHOST_QUOTING_SERVICE=https://{itp_url}/testing/114511be-74e9-49d5-b93e-b4a461e01626/e5f5e817-94d6-4a43-a7ec-f7274b6d85c2/simulator/\n")),Object(i.b)("h2",{id:"mmo2-simulator-set-up"},"MMO2 Simulator Set-up"),Object(i.b)("p",null,"To begin with, download the code for the simulator onto your machine. To do this\nusing git, run:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ git clone git@github.com:gsmainclusivetechlab/interop-mojaloop-simulator.git\n$ cd interop-mojaloop-simulator\n")),Object(i.b)("p",null,"Certain configuration files must be created to customise the simulator to your\nown environment. To get started, you can copy the ",Object(i.b)("inlineCode",{parentName:"p"},".env.example")," file included\nin the codebase."),Object(i.b)("h3",{id:"url-configuration-1"},"URL Configuration"),Object(i.b)("p",null,"The simulator must be configured with the URL for the Mojaloop hub. In our case,\nyou will actually need to add URLs for the core test platform, which will\nredirect requests to Mojaloop. All simulators must be configured with URLs that\nfollow a consistent structure:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"https://{itp_url}/testing/{my_uuid}/{recipient_uuid}/simulator/\n")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Within MMO2, ",Object(i.b)("inlineCode",{parentName:"li"},"my_uuid")," should always be equal to\n",Object(i.b)("inlineCode",{parentName:"li"},"e602a859-a25f-4d37-9abe-0ac09fb734af")),Object(i.b)("li",{parentName:"ul"},"Within MMO2, ",Object(i.b)("inlineCode",{parentName:"li"},"recipient_uuid")," should always be equal to\n",Object(i.b)("inlineCode",{parentName:"li"},"b2a85076-b748-4d93-8df1-2b39844e6d4b")," (the Mojaloop hub).")),Object(i.b)("p",null,"This URL must be updated in several places within ",Object(i.b)("inlineCode",{parentName:"p"},".env"),". In the end, the file\nshould look something like this:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ini"}),"# Mojaloop URLs - all identical\nTRANSFERS_ENDPOINT=https://{itp_url}/testing/e602a859-a25f-4d37-9abe-0ac09fb734af/e5f5e817-94d6-4a43-a7ec-f7274b6d85c2/simulator/\nQUOTES_ENDPOINT=https://{itp_url}/testing/e602a859-a25f-4d37-9abe-0ac09fb734af/e5f5e817-94d6-4a43-a7ec-f7274b6d85c2/simulator/\nTRANSACTION_REQUESTS_ENDPOINT=https://{itp_url}/testing/e602a859-a25f-4d37-9abe-0ac09fb734af/e5f5e817-94d6-4a43-a7ec-f7274b6d85c2/simulator/\nAUTHORIZATIONS_ENDPOINT=https://{itp_url}/testing/e602a859-a25f-4d37-9abe-0ac09fb734af/e5f5e817-94d6-4a43-a7ec-f7274b6d85c2/simulator/\n")),Object(i.b)("h3",{id:"launch"},"Launch"),Object(i.b)("p",null,"Once this configuration file has been added, you should simply be able to launch\nthe simulator using the following command:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ docker-compose up -d\n# Creating Simulator ... done\n")),Object(i.b)("p",null,"The simulator should be accessible at ",Object(i.b)("inlineCode",{parentName:"p"},"http://localhost:8444"),"."),Object(i.b)("h2",{id:"updating-simulators"},"Updating Simulators"),Object(i.b)("h3",{id:"backing-up"},"Backing Up"),Object(i.b)("p",null,"Updating either simulator is very straightforward and unlikely to cause any data\nloss. Before you proceed, you may nonetheless choose to make a backup of your\ndatabase with the following command (this is not necessary on MMO2, where no\ndatabase is used):"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'$ docker-compose exec mysqldb bash -c "mysqldump -p -u $DB_USERNAME  $DB_DATABASE > /var/lib/mysql/mmo-simulator_`date +%Y-%m-%d`.sql"\n# Enter password...\n')),Object(i.b)("p",null,"This will place a ",Object(i.b)("inlineCode",{parentName:"p"},".sql")," dump file inside the ",Object(i.b)("inlineCode",{parentName:"p"},"runtime/mysql")," directory. You may\nalso choose to backup any modifications you have made to configuration files or\ncode (including the mysql backup just made) using ",Object(i.b)("inlineCode",{parentName:"p"},"rsync"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ rsync -auvz ./ ~/backups/`date +%Y-%m-%d`_mmo-simulator\n# sending incremental file list\n# .git/\n# ...\n# src/vendor/webmozart/assert/src/Assert.php\n# sent 153,373,035 bytes  received 741,354 bytes  4,341,250.39 bytes/sec\n# total size is 602,736,172  speedup is 3.91\n")),Object(i.b)("h3",{id:"fetching-updates"},"Fetching Updates"),Object(i.b)("p",null,"To update the project code, simply run pull the latest changes using git. You\ncan also update service images (such as those used for mysql and redis) with\n",Object(i.b)("inlineCode",{parentName:"p"},"docker-compose"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ docker-compose stop\n# Stopping test-platform_web_1     ... done\n# Stopping test-platform_app_1     ... done\n# Stopping test-platform_mysqldb_1 ... done\n\n$ git pull\n# Updating 59995d74..0af9196d\n# ...\n\n$ docker-compose pull\n# Pulling mysqldb ... done\n# Pulling app     ... done\n# Pulling web     ... done\n")),Object(i.b)("p",null,"Once you have obtained the latest code, the procedure differs slightly for MMO1\nand MMO2."),Object(i.b)("h4",{id:"mmo1"},"MMO1"),Object(i.b)("p",null,"For MMO1, the services can immediately be restarted, and any missing\ndependencies can be installed using the ",Object(i.b)("inlineCode",{parentName:"p"},"make update")," script:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ docker-compose up -d --force-recreate\n# Recreating test-platform_mysqldb_1   ... done\n# Recreating test-platform_app_1       ... done\n# Recreating test-platform_web_1       ... done\n\n$ make update\n# docker-compose exec  --privileged --index=1 -w /var/www/html app bash -c \"make update\"\n# ...\n# make[1]: Leaving directory '~/Code/GSMA/interop-mm-simulator'\n")),Object(i.b)("h4",{id:"mmo2"},"MMO2"),Object(i.b)("p",null,"For MMO2, the simulator image must be rebuilt before restarting the services,\nand there is no need to run a ",Object(i.b)("inlineCode",{parentName:"p"},"make update")," script:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ docker-compose build\n# Building simulator\n# Step 1/9 : FROM node:12.16.0-alpine\n\n$ docker-compose up -d --force-recreate\n# Recreating simulator  ... done\n")),Object(i.b)("h2",{id:"production-use"},"Production Use"),Object(i.b)("p",null,"To set up the simulators for production use, a few changes are recommended.\nFirstly, the services defined in ",Object(i.b)("inlineCode",{parentName:"p"},"docker-compose.yml")," should be configured to\nrestart on failure by adding ",Object(i.b)("inlineCode",{parentName:"p"},"restart: always")," into the docker-compose\nconfiguration. Secondly, you may choose to add a reverse proxy (for example\nusing ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.nginx.com/"}),Object(i.b)("inlineCode",{parentName:"a"},"nginx")),") to make the simulator available on\nother hostnames."))}u.isMDXComponent=!0},196:function(e,t){},197:function(e,t){},207:function(e,t){}}]);
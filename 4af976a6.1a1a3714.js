(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{62:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return u}));var a=n(2),i=n(6),r=(n(0),n(83)),s={title:"Test Case Matching",sidebar_label:"Test Case Matching"},o={unversionedId:"architecture/matching",id:"architecture/matching",isDocsHomePage:!1,title:"Test Case Matching",description:"A single testing session will contain tests for multiple use cases, each of",source:"@site/docs/architecture/matching.mdx",slug:"/architecture/matching",permalink:"/architecture/matching",version:"current",sidebar_label:"Test Case Matching",sidebar:"someSidebar",previous:{title:"Connections between Components",permalink:"/architecture/connections"},next:{title:"Installation Guide",permalink:"/installation"}},c=[{value:"Test Triggers",id:"test-triggers",children:[]},{value:"Requests without a body",id:"requests-without-a-body",children:[]},{value:"Identical Requests",id:"identical-requests",children:[]}],l={rightToc:c};function u(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"A single testing session will contain tests for multiple use cases, each of\nwhich may contain multiple test cases. This is useful for rapid testing under a\nvariety of conditions, but means the platform must automatically identify which\ntest case is being executed when a request arrives at the platform. For example,\na session may contain two flows which differ only in whether a quote is accepted\nor rejected by a remote MMO. In this case, the test platform must identify\nwhich flow is being executed, in order validate the requests and instruct the\nremote MMO simulator to accept or reject the quote."),Object(r.b)("p",null,"For every test case within the session, the first unmatched step is selected to\ncompare against the incoming request. For test cases which have not yet been\nstarted, the very first step of the test case is selected. First, the request's\nbasic characteristics are considered to determine which of the test steps may\nmatch. These characteristics are:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"The request ",Object(r.b)("strong",{parentName:"li"},"method")," (",Object(r.b)("inlineCode",{parentName:"li"},"GET"),", ",Object(r.b)("inlineCode",{parentName:"li"},"POST"),", ",Object(r.b)("inlineCode",{parentName:"li"},"PUT"),", etc)"),Object(r.b)("li",{parentName:"ul"},"The request ",Object(r.b)("strong",{parentName:"li"},"path")," (",Object(r.b)("inlineCode",{parentName:"li"},"/transactions"),", ",Object(r.b)("inlineCode",{parentName:"li"},"quotes/{ID}"),")"),Object(r.b)("li",{parentName:"ul"},"The request ",Object(r.b)("strong",{parentName:"li"},"source and destination components")," (",Object(r.b)("inlineCode",{parentName:"li"},"Mojaloop Hub"),",\n",Object(r.b)("inlineCode",{parentName:"li"},"Service Provider"),", ",Object(r.b)("inlineCode",{parentName:"li"},"MMO1"),", etc)")),Object(r.b)("p",null,"It is frequently the case that multiple test steps will still be possible\nmatches at this stage, since many test cases test fairly similar flows. In the\nexample given above for example, these characteristics would be identical for\nboth the accepted and rejected cases, since both follow the same basic flow of\nrequests. To disambiguate between them, a further check is required, known as\ntest ",Object(r.b)("em",{parentName:"p"},"triggers"),"."),Object(r.b)("h2",{id:"test-triggers"},"Test Triggers"),Object(r.b)("p",null,"A test trigger takes the form of a JSON object which must be present within the\nbody of a request for it to match against the test step. For example, a test\nstep might be defined with a trigger of:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{ "amount": 20.03 }\n')),Object(r.b)("p",null,"If a request arrives at the platform with a body containing the following, the\ntest case would be considered a match:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "payerid": { "type": "MSISDN", "id": "123456789" },\n  "amount": 20.03,\n  "currency": "EUR"\n}\n')),Object(r.b)("p",null,"However, a request with this body would not be considered a match:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "payerid": { "type": "MSISDN", "id": "123456789" },\n  "amount": 20.04,\n  "currency": "EUR"\n}\n')),Object(r.b)("p",null,"In this way, multiple test cases can be defined unambiguously while sharing\nalmost identical flows. Returning to the example above, the accepted case may be\ndefined with a trigger of ",Object(r.b)("inlineCode",{parentName:"p"},'{"amount": 20.03}')," while the rejected case is defined\nwith a trigger of ",Object(r.b)("inlineCode",{parentName:"p"},'{"amount": 20.04}'),". The two test cases can then be executed\nin any order (or even simultaneously) with no conflict between them."),Object(r.b)("h2",{id:"requests-without-a-body"},"Requests without a body"),Object(r.b)("p",null,"Some requests (such as ",Object(r.b)("inlineCode",{parentName:"p"},"GET")," requests) do not have a payload body with which a\ntrigger could be set up. In this case, it may be possible to write a test case\nwith a trigger embedded within the test step path. For example, a request to an\naccount lookup service might involve a request of the form\n",Object(r.b)("inlineCode",{parentName:"p"},"GET /parties/{TYPE}/{ID}"),". Two test cases could be defined which differ in the\nparticipant ID used. Since the paths are tested using a regular expression\npattern, these might be defined as such:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Test case 1\n# ...\ntest_steps:\n  - pattern: '^parties/[^/]+/7777777771$'\n    # ...\n\n# Test case 2\n# ...\ntest_steps:\n  - pattern: '^parties/[^/]+/7777777772$'\n    # ...\n")),Object(r.b)("h2",{id:"identical-requests"},"Identical Requests"),Object(r.b)("p",null,"In the case that neither the request body nor the request path contain any data\nwhich may be used as a trigger, it is not currently possible to disambiguate any\nfurther. As a result, it is not possible to execute multiple test cases\nsimultaneously, since the platform will not be able to determine which test case\nis under execution."),Object(r.b)("p",null,"To allow testing such similar scenarios, ITP defines an option\n",Object(r.b)("inlineCode",{parentName:"p"},"FORCE_SEQUENTIAL_TESTS"),' which is false by default. When the option is enabled,\ntest executions are expected to be sequential - so a single session should never\nhave two parallel test runs. By making this assumption, it becomes possible to\nunambiguously select one of several identical test cases by simply clicking the\n"Run Test Case" button for the desired test case. This will initiate the test\ncase execution, and any requests received by the platform will be automatically\nmatched to the current test case until the test run is complete.'))}u.isMDXComponent=!0},83:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=i.a.createContext({}),u=function(e){var t=i.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},b=function(e){var t=u(e.components);return i.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},h=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=u(n),h=a,d=b["".concat(s,".").concat(h)]||b[h]||p[h]||r;return n?i.a.createElement(d,o(o({ref:t},l),{},{components:n})):i.a.createElement(d,o({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=h;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var l=2;l<r;l++)s[l]=n[l];return i.a.createElement.apply(null,s)}return i.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"}}]);
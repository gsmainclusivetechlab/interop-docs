(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{80:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return u}));var a=n(2),i=n(6),o=(n(0),n(85)),r={title:"Service Provider Installation Guide",sidebar_label:"Service Provider"},l={unversionedId:"installation/sp",id:"installation/sp",isDocsHomePage:!1,title:"Service Provider Installation Guide",description:"GSMA SP Simulator",source:"@site/docs/installation/sp.md",slug:"/installation/sp",permalink:"/installation/sp",editUrl:"https://github.com/gsmainclusivetechlab/interop-docs/blob/develop/docs/installation/sp.md",version:"current",sidebar_label:"Service Provider",sidebar:"someSidebar",previous:{title:"Mobile Money Operator Installation Guide",permalink:"/installation/mmo"},next:{title:"Mojaloop Installation Guide",permalink:"/installation/mojaloop"}},s=[{value:"GSMA SP Simulator",id:"gsma-sp-simulator",children:[]},{value:"URL Configuration",id:"url-configuration",children:[]},{value:"Database Installation",id:"database-installation",children:[]},{value:"Updating Simulators",id:"updating-simulators",children:[{value:"Backing Up",id:"backing-up",children:[]},{value:"Fetching Updates",id:"fetching-updates",children:[]}]},{value:"Production Use",id:"production-use",children:[]}],c={rightToc:s};function u(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h3",{id:"gsma-sp-simulator"},"GSMA SP Simulator"),Object(o.b)("p",null,"To begin with, download the code for the simulator onto your machine. To do this\nusing git, run:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ git clone git@github.com:gsmainclusivetechlab/interop-sp-simulator.git\n$ cd interop-sp-simulator\n")),Object(o.b)("p",null,"Certain configuration files must be created to customise the simulator to your\nown environment. To get you started, you can copy the ",Object(o.b)("inlineCode",{parentName:"p"},"*.example")," files included\nin the codebase. Alternatively, you can run the ",Object(o.b)("inlineCode",{parentName:"p"},"make init")," command if you have\n",Object(o.b)("inlineCode",{parentName:"p"},"make")," installed on your machine. The files to copy are:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},".env"),": In this file, you can configure the ports that the simulator should\nlisten for connections on, as well as defining credentials for the MySQL\ndatabase."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"src/.env"),": In this file, you can configure the URL for the test platform (see\n",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"#url-configuration"}),"URL Configuration")," below)"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"docker-compose.yml"),": No changes should be required for development.")),Object(o.b)("h3",{id:"url-configuration"},"URL Configuration"),Object(o.b)("p",null,"The simulator must be configured with the URL for the service provider's MMO\ninside the ",Object(o.b)("inlineCode",{parentName:"p"},"src/.env")," file. In our case, you will actually need to add URLs for\nthe core test platform, which will redirect requests to the MMO. All simulators\nmust be configured with URLs that follow a consistent structure:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"https://{itp_url}/testing/{my_uuid}/{recipient_uuid}/simulator/\n")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Within the SP simulator, ",Object(o.b)("inlineCode",{parentName:"li"},"my_uuid")," should always be equal to\n",Object(o.b)("inlineCode",{parentName:"li"},"114511be-74e9-49d5-b93e-b4a461e01626")),Object(o.b)("li",{parentName:"ul"},"Within the SP simulator, ",Object(o.b)("inlineCode",{parentName:"li"},"recipient_uuid")," should always be equal to\n",Object(o.b)("inlineCode",{parentName:"li"},"e5f5e817-94d6-4a43-a7ec-f7274b6d85c2")," (MMO1 simulator).")),Object(o.b)("p",null,"The configured URL should end up looking like this:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ini"}),"HOST_MMO_1=https://{itp_url}/114511be-74e9-49d5-b93e-b4a461e01626/e5f5e817-94d6-4a43-a7ec-f7274b6d85c2/simulator/\n")),Object(o.b)("p",null,"Once the configuration files have been added, you should be able to launch all\nservices using the following command:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'$ docker-compose up -d\n# Creating network "sp-simulator_default" with the default driver\n# Creating sp-simulator_mysqldb_1 ... done\n# Creating sp-simulator_nodejs_1 ... done\n# Creating sp-simulator_app_1     ... done\n# Creating sp-simulator_web_1     ... done\n')),Object(o.b)("h3",{id:"database-installation"},"Database Installation"),Object(o.b)("p",null,"At this point, ",Object(o.b)("inlineCode",{parentName:"p"},"docker-compose")," has launched all services required for the\nsimulator, but they still require further set-up. You can now set up the\ndatabase and install any missing dependencies by simply running ",Object(o.b)("inlineCode",{parentName:"p"},"make install"),":"),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"In a future version of the MMO1 simulator, the images used by Docker will be\npre-configured, so this step will not be necessary.")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ make install\n# docker-compose exec app bash -c \"make install\"\n# Chmod storage and bootstrap cache...\n# Install composer...\n# ...\n# make[1]: Leaving directory '~/Code/GSMA/interop-sp-simulator'\n# touch runtime/installed\n")),Object(o.b)("p",null,"The simulator should now be accessible at ",Object(o.b)("inlineCode",{parentName:"p"},"http://localhost:8087"),"."),Object(o.b)("h2",{id:"updating-simulators"},"Updating Simulators"),Object(o.b)("h3",{id:"backing-up"},"Backing Up"),Object(o.b)("p",null,"Updating the simulator is very straightforward and unlikely to cause any data\nloss. Before you proceed, you may nonetheless choose to make a backup of your\ndatabase with the following command:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),'$ docker-compose exec mysqldb bash -c "mysqldump -p -u $DB_USERNAME  $DB_DATABASE > /var/lib/mysql/sp-simulator_`date +%Y-%m-%d`.sql"\n# Enter password...\n')),Object(o.b)("p",null,"This will place a ",Object(o.b)("inlineCode",{parentName:"p"},".sql")," dump file inside the ",Object(o.b)("inlineCode",{parentName:"p"},"runtime/mysql")," directory. You may\nalso choose to backup any modifications you have made to configuration files or\ncode (including the mysql backup just made) using ",Object(o.b)("inlineCode",{parentName:"p"},"rsync"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ rsync -auvz ./ ~/backups/`date +%Y-%m-%d`sp-simulator\n# sending incremental file list\n# .git/\n# ...\n# src/vendor/webmozart/assert/src/Assert.php\n# sent 153,373,035 bytes  received 741,354 bytes  4,341,250.39 bytes/sec\n# total size is 602,736,172  speedup is 3.91\n")),Object(o.b)("h3",{id:"fetching-updates"},"Fetching Updates"),Object(o.b)("p",null,"To update the project code, simply run pull the latest changes using git. You\ncan also update service images (such as those used for mysql) with\n",Object(o.b)("inlineCode",{parentName:"p"},"docker-compose"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ docker-compose stop\n# Stopping sp-simulator_web_1     ... done\n# Stopping sp-simulator_app_1     ... done\n# Stopping sp-simulator_mysqldb_1 ... done\n\n$ git pull\n# Updating 59995d74..0af9196d\n# ...\n\n$ docker-compose pull\n# Pulling mysqldb ... done\n# Pulling app     ... done\n# Pulling web     ... done\n")),Object(o.b)("p",null,"At this point, the services can immediately be restarted, and any missing\ndependencies can be installed using the ",Object(o.b)("inlineCode",{parentName:"p"},"make update")," script:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"$ docker-compose up -d --force-recreate\n# Recreating sp-simulator_mysqldb_1   ... done\n# Recreating sp-simulator_app_1       ... done\n# Recreating sp-simulator_web_1       ... done\n\n$ make update\n# docker-compose exec  --privileged --index=1 -w /var/www/html app bash -c \"make update\"\n# ...\n# make[1]: Leaving directory '~/Code/GSMA/interop-sp-simulator'\n")),Object(o.b)("h2",{id:"production-use"},"Production Use"),Object(o.b)("p",null,"To set up the simulators for production use, a few changes are recommended:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"The services defined in ",Object(o.b)("inlineCode",{parentName:"li"},"docker-compose.yml")," should be configured to restart\non failure by adding ",Object(o.b)("inlineCode",{parentName:"li"},"restart: always")," into the docker-compose configuration."),Object(o.b)("li",{parentName:"ul"},"You may choose to add a reverse proxy (for example using\n",Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.nginx.com/"}),Object(o.b)("inlineCode",{parentName:"a"},"nginx")),") to make the simulator available on other\nhostnames.")))}u.isMDXComponent=!0},85:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),i=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=i.a.createContext({}),u=function(e){var t=i.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},d=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,r=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),d=a,m=p["".concat(r,".").concat(d)]||p[d]||b[d]||o;return n?i.a.createElement(m,l(l({ref:t},c),{},{components:n})):i.a.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,r[1]=l;for(var c=2;c<o;c++)r[c]=n[c];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{146:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return u}));var a=n(2),r=n(9),i=(n(0),n(179)),s={id:"matching",title:"Test Case Matching",sidebar_label:"Test Case Matching"},o={id:"architecture/matching",title:"Test Case Matching",description:"A single testing session will contain tests for multiple use cases, each of",source:"@site/docs/architecture/matching.mdx",permalink:"/architecture/matching",editUrl:"https://github.com/gsmainclusivetechlab/interop-docs/blob/develop/docs/architecture/matching.mdx",sidebar_label:"Test Case Matching",sidebar:"someSidebar",previous:{title:"Connections between Components",permalink:"/architecture/connections"},next:{title:"Installation Guide",permalink:"/installation/introduction"}},c=[{value:"Test Triggers",id:"test-triggers",children:[{value:"Requests without a body",id:"requests-without-a-body",children:[]}]}],l={rightToc:c};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"A single testing session will contain tests for multiple use cases, each of\nwhich may contain multiple test cases. This is useful for rapid testing under a\nvariety of conditions, but means the platform must identify which test case is\nbeing executed when a request arrives at the platform. For example, a session\nmay contain two flows which differ only in whether a quote is accepted or\nrejected by a remote DFSP. In this case, the test platform must identify which\nflow is being executed, in order to instruct the remote DFSP simulator to accept\nor reject the quote."),Object(i.b)("p",null,"For every test case within the session, the first unmatched step is selected to\ncompare against the incoming request. For test cases which have not yet been\nstarted, the very first step of the test case is selected. First, the request's\nbasic characteristics are considered to determine which of the test steps may\nmatch. These characteristics are:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"The request ",Object(i.b)("strong",{parentName:"li"},"method")," (",Object(i.b)("inlineCode",{parentName:"li"},"GET"),", ",Object(i.b)("inlineCode",{parentName:"li"},"POST"),", ",Object(i.b)("inlineCode",{parentName:"li"},"PUT"),", etc)"),Object(i.b)("li",{parentName:"ul"},"The request ",Object(i.b)("strong",{parentName:"li"},"path")," (",Object(i.b)("inlineCode",{parentName:"li"},"/transactions"),", ",Object(i.b)("inlineCode",{parentName:"li"},"quotes/{ID}"),")"),Object(i.b)("li",{parentName:"ul"},"The request ",Object(i.b)("strong",{parentName:"li"},"source and destination components")," (",Object(i.b)("inlineCode",{parentName:"li"},"Mojaloop Hub"),",\n",Object(i.b)("inlineCode",{parentName:"li"},"Service Provider"),", ",Object(i.b)("inlineCode",{parentName:"li"},"DFSP1"),", etc)")),Object(i.b)("p",null,"It is frequently the case that multiple test steps will still be possible\nmatches at this stage, since many test-cases test fairly similar flows. In the\nexample given above for example, these characteristics would be identical for\nboth the accepted and rejected cases, since both follow the same basic flow of\nrequests. To disambiguate between them, a further check is required, known as\ntest ",Object(i.b)("em",{parentName:"p"},"triggers"),"."),Object(i.b)("h2",{id:"test-triggers"},"Test Triggers"),Object(i.b)("p",null,"A test trigger takes the form of a JSON object which must be present within the\nbody of a request for it to match against the test step. For example, a test\nstep might be defined with a trigger of:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{ "amount": 20.03 }\n')),Object(i.b)("p",null,"If a request arrives at the platform with a body containing the following, the\ntest case would be considered a match:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "payerid": { "type": "MSISDN", "id": "123456789" },\n  "amount": 20.03,\n  "currency": "EUR"\n}\n')),Object(i.b)("p",null,"However, a request with this body would not be considered a match:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "payerid": { "type": "MSISDN", "id": "123456789" },\n  "amount": 20.04,\n  "currency": "EUR"\n}\n')),Object(i.b)("p",null,"In this way, multiple test cases can be defined unambiguously while sharing\nalmost identical flows. Returning the example above, the accepted case may be\ndefined with a trigger of ",Object(i.b)("inlineCode",{parentName:"p"},'{"amount": 20.03}')," while the rejected case is defined\nwith a trigger of ",Object(i.b)("inlineCode",{parentName:"p"},'{"amount": 20.04}'),". The two test cases can then be executed\nin any order (or even simultaneously) with no conflict between them."),Object(i.b)("h3",{id:"requests-without-a-body"},"Requests without a body"),Object(i.b)("p",null,"Some requests (such as ",Object(i.b)("inlineCode",{parentName:"p"},"GET")," requests) do not have a payload body with which a\ntrigger could be set up. In this case, it may be possible to write a test case\nwith a trigger embedded within the test step path. For example, a request to an\naccount lookup service might involve a request of the form\n",Object(i.b)("inlineCode",{parentName:"p"},"GET /parties/{TYPE}/{ID}"),". Two test cases could be defined which differ in the\nparticipant ID used. Since the paths are tested using a regular expression\npattern, these might be defined as such:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Test case 1\n# ...\ntest_steps:\n  - pattern: '^parties/[^/]+/7777777771$'\n    # ...\n\n# Test case 2\n# ...\ntest_steps:\n  - pattern: '^parties/[^/]+/7777777772$'\n    # ...\n")),Object(i.b)("p",null,"In the case that the request path does not contain any data which may be used as\na trigger, it is not currently possible to disambiguate any further. In a future\nversion of the test platform, it may be possible to use a custom request header\nas a test trigger."),Object(i.b)("p",null,"It is also worth noting that these test triggers are only required in the case\nof ambiguity between multiple steps in different test cases. This is most\nimportant for the first step of each test case, since it is generally possible\nto avoid ambiguity in later steps by simply running each test case one at a\ntime."))}u.isMDXComponent=!0},179:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),u=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o({},t,{},e)),n},b=function(e){var t=u(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},h=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=u(n),h=a,d=b["".concat(s,".").concat(h)]||b[h]||p[h]||i;return n?r.a.createElement(d,o({ref:t},l,{components:n})):r.a.createElement(d,o({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=h;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var l=2;l<i;l++)s[l]=n[l];return r.a.createElement.apply(null,s)}return r.a.createElement.apply(null,n)}h.displayName="MDXCreateElement"}}]);